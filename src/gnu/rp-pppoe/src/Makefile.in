# @configure_input@
#***********************************************************************
#
# Makefile
#
# Makefile for Roaring Penguin's Linux user-space PPPoE client.
#
# Copyright (C) 2000 Roaring Penguin Software Inc.
#
# This program may be distributed according to the terms of the GNU
# General Public License, version 2 or (at your option) any later version.
#
# $Id: Makefile.in,v 1.25 2001/02/05 15:44:34 dfs Exp $
#***********************************************************************

# Version is set ONLY IN THE MAKEFILE!  Don't delete this!
VERSION=2.8

DEFINES= 
prefix=@prefix@
exec_prefix=@exec_prefix@
mandir=@mandir@
docdir=@prefix@/share/doc/rp-pppoe
install=@INSTALL@
install_dir=@INSTALL@ -d
sbindir=@sbindir@

# Plugin for pppd on Linux
LINUX_KERNELMODE_PLUGIN=@LINUX_KERNELMODE_PLUGIN@
PPPD_INCDIR=@PPPD_INCDIR@

# PPPoE relay -- currently only supported on Linux
PPPOE_RELAY=@PPPOE_RELAY@

# Program paths
PPPOE_PATH=$(sbindir)/pppoe
PPPD_PATH=@PPPD@

# Kernel-mode plugin gets installed here.
PLUGIN_DIR=/etc/ppp/plugins
PLUGIN_PATH=$(PLUGIN_DIR)/rp-pppoe.so

# Configuration file paths
PPPOESERVER_PPPD_OPTIONS=/etc/ppp/pppoe-server-options

PATHS='-DPPPOE_PATH="$(PPPOE_PATH)"' '-DPPPD_PATH="$(PPPD_PATH)"' \
	'-DPLUGIN_PATH="$(PLUGIN_PATH)"' \
	'-DPPPOE_SERVER_OPTIONS="$(PPPOESERVER_PPPD_OPTIONS)"'

CFLAGS= @CFLAGS@ $(DEFINES) $(PATHS)

all: pppoe pppoe-server $(LINUX_KERNELMODE_PLUGIN) $(PPPOE_RELAY)
	@echo ""
	@echo "Type 'make install' as root to install the software."

pppoe-sniff: pppoe-sniff.o if.o common.o debug.o
	@CC@ -o pppoe-sniff pppoe-sniff.o if.o common.o debug.o $(LIBS)

pppoe-server: pppoe-server.o if.o debug.o common.o md5.o
	@CC@ -o pppoe-server pppoe-server.o if.o debug.o common.o md5.o $(LIBS)

pppoe: pppoe.o if.o debug.o common.o ppp.o discovery.o
	@CC@ -o pppoe pppoe.o if.o debug.o common.o ppp.o discovery.o $(LIBS)

pppoe-relay: relay.o if.o debug.o common.o
	@CC@ -o pppoe-relay relay.o if.o debug.o common.o $(LIBS)

pppoe.o: pppoe.c pppoe.h
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o pppoe.o pppoe.c

discovery.o: discovery.c pppoe.h
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o discovery.o discovery.c

ppp.o: ppp.c pppoe.h
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o ppp.o ppp.c

md5.o: md5.c md5.h
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o md5.o md5.c

pppoe-server.o: pppoe-server.c pppoe.h
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o pppoe-server.o pppoe-server.c

pppoe-sniff.o: pppoe-sniff.c pppoe.h
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o pppoe-sniff.o pppoe-sniff.c

if.o: if.c pppoe.h
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o if.o if.c

common.o: common.c pppoe.h
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o common.o common.c

debug.o: debug.c pppoe.h
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o debug.o debug.c

relay.o: relay.c relay.h pppoe.h
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o relay.o relay.c

# Linux-specific plugin
rp-pppoe.so: plugin/libplugin.a plugin/plugin.o
	@CC@ -o rp-pppoe.so -shared plugin/plugin.o plugin/libplugin.a

plugin/plugin.o: plugin.c
	@CC@ '-DVERSION="$(VERSION)"' -I$(PPPD_INCDIR) -c -o plugin/plugin.o -fPIC plugin.c

plugin/libplugin.a: plugin/discovery.o plugin/if.o plugin/common.o plugin/debug.o
	ar -rc $@ $^

plugin/discovery.o: discovery.c
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o plugin/discovery.o -fPIC discovery.c

plugin/if.o: if.c
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o plugin/if.o -fPIC if.c

plugin/debug.o: debug.c
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o plugin/debug.o -fPIC debug.c

plugin/common.o: common.c
	@CC@ $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o plugin/common.o -fPIC common.c

install: pppoe pppoe-server
	-mkdir -p $(RPM_INSTALL_ROOT)$(sbindir)
	$(install) -m 755 -s pppoe $(RPM_INSTALL_ROOT)$(sbindir)
	$(install) -m 755 -s pppoe-server $(RPM_INSTALL_ROOT)$(sbindir)
	if test -x pppoe-relay ; then $(install) -m 755 -s pppoe-relay $(RPM_INSTALL_ROOT)$(sbindir); fi
#	$(install) -m 755 -s pppoe-sniff $(RPM_INSTALL_ROOT)$(sbindir)
	$(install) -m 755 ../scripts/adsl-connect $(RPM_INSTALL_ROOT)$(sbindir)
	$(install) -m 755 ../scripts/adsl-start $(RPM_INSTALL_ROOT)$(sbindir)
	$(install) -m 755 ../scripts/adsl-status $(RPM_INSTALL_ROOT)$(sbindir)
	$(install) -m 755 ../scripts/adsl-stop $(RPM_INSTALL_ROOT)$(sbindir)
	$(install) -m 755 ../scripts/adsl-setup $(RPM_INSTALL_ROOT)$(sbindir)
	-mkdir -p $(RPM_INSTALL_ROOT)$(docdir)
	$(install) -m 644 ../doc/CHANGES $(RPM_INSTALL_ROOT)$(docdir)
#	$(install) -m 644 ../doc/KERNEL-MODE-PPPOE $(RPM_INSTALL_ROOT)$(docdir)
	$(install) -m 644 ../doc/HOW-TO-CONNECT $(RPM_INSTALL_ROOT)$(docdir)
	$(install) -m 644 ../doc/LICENSE $(RPM_INSTALL_ROOT)$(docdir)
	$(install) -m 644 ../README $(RPM_INSTALL_ROOT)$(docdir)
	$(install) -m 644 ../configs/pap-secrets $(RPM_INSTALL_ROOT)$(docdir)
	-mkdir -p $(RPM_INSTALL_ROOT)$(mandir)/man8
	$(install) -m 644 ../man/pppoe.8 $(RPM_INSTALL_ROOT)$(mandir)/man8
#	$(install) -m 644 ../man/pppoe-relay.8 $(RPM_INSTALL_ROOT)$(mandir)/man8
	$(install) -m 644 ../man/adsl-start.8 $(RPM_INSTALL_ROOT)$(mandir)/man8
	$(install) -m 644 ../man/adsl-stop.8 $(RPM_INSTALL_ROOT)$(mandir)/man8
	$(install) -m 644 ../man/adsl-status.8 $(RPM_INSTALL_ROOT)$(mandir)/man8
	$(install) -m 644 ../man/adsl-connect.8 $(RPM_INSTALL_ROOT)$(mandir)/man8
	$(install) -m 644 ../man/adsl-setup.8 $(RPM_INSTALL_ROOT)$(mandir)/man8
	$(install) -m 644 ../man/pppoe-server.8 $(RPM_INSTALL_ROOT)$(mandir)/man8
#	$(install) -m 644 ../man/pppoe-sniff.8 $(RPM_INSTALL_ROOT)$(mandir)/man8
	-mkdir -p $(RPM_INSTALL_ROOT)$(mandir)/man5
	$(install) -m 644 ../man/pppoe.conf.5 $(RPM_INSTALL_ROOT)$(mandir)/man5
#	-mkdir -p $(RPM_INSTALL_ROOT)/etc/ppp
#	-mkdir -p $(RPM_INSTALL_ROOT)$(PLUGIN_DIR)
#	-echo "# Directory created by rp-pppoe for kernel-mode plugin" > $(RPM_INSTALL_ROOT)$(PLUGIN_DIR)/README
#	if test -r rp-pppoe.so; then $(install) -m 755 rp-pppoe.so $(RPM_INSTALL_ROOT)$(PLUGIN_DIR); fi
#	@for i in pppoe.conf firewall-standalone firewall-masq ; do \
#		if [ ! -f $(RPM_INSTALL_ROOT)/etc/ppp/$$i ] ; then \
#			$(install) -m 644 ../configs/$$i $(RPM_INSTALL_ROOT)/etc/ppp ; \
#		else \
#			echo "NOT overwriting existing $(RPM_INSTALL_ROOT)/etc/ppp/$$i" ;\
#			$(install) -m 644 ../configs/$$i $(RPM_INSTALL_ROOT)/etc/ppp/$$i-$(VERSION) ;\
#		fi ;\
#	done
#	$(install) -m 644 ../configs/pppoe-server-options $(RPM_INSTALL_ROOT)$(PPPOESERVER_PPPD_OPTIONS)
#	@if [ -f /etc/redhat-release ] ; then \
#		echo "Looks like a Red Hat system; installing $(RPM_INSTALL_ROOT)/etc/rc.d/init.d/adsl" ; \
#		mkdir -p $(RPM_INSTALL_ROOT)/etc/rc.d/init.d ;\
#		$(install) -m 755 ../scripts/adsl-init $(RPM_INSTALL_ROOT)/etc/rc.d/init.d/adsl ; \
#	fi
#	@if [ -f /etc/turbolinux-release ] ; then \
#		echo "Looks like a TurboLinux system; installing $(RPM_INSTALL_ROOT)/etc/rc.d/init.d/adsl" ; \
#		mkdir -p $(RPM_INSTALL_ROOT)/etc/rc.d/init.d ;\
#		$(install) -m 755 adsl-init-turbolinux $(RPM_INSTALL_ROOT)/etc/rc.d/init.d/adsl ; \
#	fi
#	@if [ -f /etc/SuSE-release ] ; then \
#		echo "Looks like a SuSE Linux system; installing $(RPM_INSTALL_ROOT)/etc/rc.d/init.d/adsl" ; \
#		mkdir -p $(RPM_INSTALL_ROOT)/etc/rc.d/init.d ;\
#		$(install) -m 755 ../scripts/adsl-init-suse $(RPM_INSTALL_ROOT)/etc/rc.d/init.d/adsl ; \
#	fi
#	@echo ""
#	@echo "Type 'adsl-setup' to configure the software."

distro:
	cd ..; \
	rm -rf rp-pppoe-$(VERSION) ; \
	mkdir rp-pppoe-$(VERSION) || exit 1; \
	for i in README go rp-pppoe.spec ; do \
		cp $$i rp-pppoe-$(VERSION) || exit 1; \
	done ; \
	mkdir rp-pppoe-$(VERSION)/configs || exit 1; \
	for i in firewall-masq firewall-standalone pap-secrets pppoe-server-options pppoe.conf ; do \
		cp configs/$$i rp-pppoe-$(VERSION)/configs || exit 1; \
	done ; \
	mkdir rp-pppoe-$(VERSION)/doc || exit 1; \
	for i in CHANGES HOW-TO-CONNECT LICENSE PROBLEMS ; do \
		cp doc/$$i rp-pppoe-$(VERSION)/doc || exit 1; \
	done; \
	mkdir rp-pppoe-$(VERSION)/man || exit 1; \
	for i in adsl-connect.8 adsl-setup.8 adsl-start.8 adsl-status.8 adsl-stop.8 pppoe-server.8 pppoe-sniff.8 pppoe.8 pppoe-relay.8 pppoe.conf.5 ; do \
		cp man/$$i rp-pppoe-$(VERSION)/man || exit 1; \
	done; \
	mkdir rp-pppoe-$(VERSION)/scripts || exit 1; \
	for i in adsl-connect.in adsl-init-suse.in adsl-init-turbolinux.in adsl-init.in adsl-setup.in adsl-start.in adsl-stop.in adsl-status ; do \
		cp scripts/$$i rp-pppoe-$(VERSION)/scripts || exit 1; \
	done; \
	mkdir rp-pppoe-$(VERSION)/src || exit 1; \
	for i in Makefile.in install-sh common.c config.h.in configure configure.in debug.c discovery.c if.c md5.c md5.h ppp.c pppoe-server.c pppoe-sniff.c pppoe.c pppoe.h plugin.c relay.c relay.h ; do \
		cp src/$$i rp-pppoe-$(VERSION)/src || exit 1; \
	done; \
	mkdir rp-pppoe-$(VERSION)/src/plugin || exit 1; \
	tar cvf rp-pppoe-$(VERSION).tar rp-pppoe-$(VERSION)/* ; \
	gzip -f -v -9 rp-pppoe-$(VERSION).tar ; \

clean:
	rm -f *.o pppoe pppoe-sniff pppoe-server core rp-pppoe.so plugin/*.o plugin/libplugin.a *~

distclean: clean
	rm -f Makefile config.h config.cache config.log config.status
	rm -f ../scripts/adsl-connect ../scripts/adsl-start ../scripts/adsl-stop ../scripts/adsl-init ../scripts/adsl-setup ../scripts/adsl-init-suse ../scripts/adsl-init-turbolinux

.PHONY: clean

.PHONY: distclean
