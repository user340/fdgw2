PIM6SD.CONF(5)            NetBSD Programmer's Manual            PIM6SD.CONF(5)

NNAAMMEE
     ppiimm66ssdd..ccoonnff - config file for pim6sd, PIM-SM daemon for IPv6

DDEESSCCRRIIPPTTIIOONN
     The ppiimm66ssdd..ccoonnff configuration file consists of a sequence of statements
     terminated by a semi-colon (`;'), each of which specifies how the daemon
     treats each interface on the system, specifies some parameters of the PIM
     protocol, and requires some special behavior defined by the protocol.

     Each statement can be constructed by multiple lines.

     Lines beginning with `#' are comments.

     The following statements can be specified in the configuration file.

     lloogg _o_p_t_i_o_n_._._. ;
             Specify debug messages to be printed out. Each _o_p_t_i_o_n usually
             specifies a subset of the messages to be printed.  If an _o_p_t_i_o_n
             begins with nnoo, it means that the set of the messages that are
             specified by the option will not be printed. For example, ``aallll
             nnoommlldd'' means that all the messages except MLD related ones will
             be printed.  Valid options are mmlldd__pprroottoo,, mmlldd__ttiimmeerr,, mmlldd__mmeemmbbeerr,,
             mmlldd,, sswwiittcchh,, ttrraaccee,, mmttrraaccee,, ttrraacceerroouuttee,, ttiimmeeoouutt,, ccaalllloouutt,, ppkktt,,
             ppaacckkeettss,, iinntteerrffaacceess,, vviiff,, kkeerrnneell,, ccaacchhee,, mmffcc,, kk__ccaacchhee,, kk__mmffcc,,
             rrssrrrr,, ppiimm__ddeettaaiill,, ppiimm__hheelllloo,, ppiimm__nneeiigghhbboorrss,, ppiimm__rreeggiisstteerr,,
             rreeggiisstteerrss,, ppiimm__jjooiinn__pprruunnee,, ppiimm__jj__pp,, ppiimm__jjpp,, ppiimm__bboooottssttrraapp,,
             ppiimm__bbssrr,, bbssrr,, bboooottssttrraapp,, ppiimm__aasssseerrttss,, ppiimm__ccaanndd__rrpp,, ppiimm__cc__rrpp,,
             ppiimm__rrpp,, rrpp,, ppiimm__rroouutteess,, ppiimm__rroouuttiinngg,, ppiimm__mmrrtt,, ppiimm__ttiimmeerrss,,
             ppiimm__rrppff,, rrppff,, ppiimm,, rroouutteess,, rroouuttiinngg,, mmrrtt,, rroouutteerrss,, mmrroouutteerrss,,
             nneeiigghhbboorrss,, ttiimmeerrss,, aasssseerrttss,, and aallll.
     rreevveerrsseellooookkuupp ((yyeess || nnoo));;
             Specifies if a hostname for an IPv6 address should be resolved on
             logging.  yyeess means a hostname should be resolved, and nnoo means
             should not.  By default, a hostname is not resolved.
     ddeeffaauulltt__pphhyyiinntt__ssttaattuuss ((ddiissaabbllee || eennaabbllee));;
             Specifies pim6sd(8) to enable or disable multicast routing, when
             it is not explicitly configured in pphhyyiinntt statement.  By default,
             eennaabbllee is assumed.
     pphhyyiinntt _i_n_t_e_r_f_a_c_e ((ddiissaabbllee || eennaabbllee));;
             Specifies pim6sd(8) to enable or disable multicast routing on the
             interface.  If none of them are specified, ddeeffaauulltt__pphhyyiinntt__ssttaattuuss
             statement determines whether multicast routing is enabled or dis-
             abled.  Interfaces are specified in the form of "name unit", such
             as _g_i_f_0 and _e_p_1_.
     pphhyyiinntt _i_n_t_e_r_f_a_c_e [preference _p_r_e_f_e_r_e_n_c_e] [metric _m_e_t_r_i_c] [nolistener] ;
             Specifies the preference and/or metric values when sending a PIM
             assert message on the interface.  If another optional parameter
             nnoolliisstteenneerr is specified, pim6sd(8) will not send any MLD packets
             on the interface.  This option is usually meaningless but will be
             useful when MLD messages are noisy (e.g. when debugging) and
             there is surely no listner on the interface.
     pphhyyiinntt _i_n_t_e_r_f_a_c_e [llqi _n] [robustness _r] [query_rsp_interval _q_r_i]
             [query_interval _q_i] [mld_version _v_e_r] ;
             Specifies MLDv2-specific parameters for the given interface.
             llllqqii is used to specify last-listener-query-interval, and its de-
             fault value is 1000ms.  rroobbuussttnneessss is for robustness-variable for
             the interface and its default value is 2.  qquueerryy__rrsspp__iinntteerrvvaall and
             qquueerryy__iinntteerrvvaall corresponds to query-response-interval and query-
             interval in MLDv2 Query message, and their default value is
             10000ms (query_rsp_interval), and 125s (query_interval).
             mmlldd__vveerrssiioonn is used to specify the acceptable version of MLD.
             For example if it is configured as 1, then only MLDv1 packet is
             permitted on this interface.  If the argument is aannyy , then any
             version of MLD (currently v1 and v2) are permitted.  If you are
             to enable MLDv1-compat-mode under MLDv2, you should specify aannyy ,
             since only MLDv2 packet is permitted if it is configured as 2.
             Its default value is 1.
     ddeeffaauulltt__ssoouurrccee__pprreeffeerreennccee _p_r_e_f_e_r_e_n_c_e_;
             Specifies a default preference value when sending a PIM assert
             message.  Preferences are used by assert elections to determine
             upstream routers.  Currently pim6sd(8) does not have an effective
             method to obtain preferences and metrics from the unicast routing
             protocols, so you may want to set a default value by hand.  The
             default preference is 1024.
     ddeeffaauulltt__ssoouurrccee__mmeettrriicc _m_e_t_r_i_c_;
             Specifies a default metric value when sending a PIM assert mes-
             sage.  Since pim6sd(8) cannot get an effective metric of unicast
             routing, it is recommended that preferences is set such that met-
             rics are never consulted. However, default metrics may also be
             set, and its default value is 1024.
     ggrraannuullaarriittyy _s_e_c_o_n_d_;
             Specifies timer granularity in seconds.  The default value is 5.
     hheelllloo__ppeerriioodd _p_e_r_i_o_d _c_o_e_f_;
             _P_e_r_i_o_d specifies the period in second between 2 hello messages.
             _C_o_e_f is the coefficient to determine the hello holdtime; the
             holdtime will be _p_e_r_i_o_d * _c_o_e_f.  The default values of the period
             and the coefficient are 30 and 3.5, respectively. The default
             holdtime is 105 seconds as a result.
     jjooiinn__pprruunnee__ppeerriioodd _p_e_r_i_o_d _c_o_e_f_;
             _P_e_r_i_o_d specifies the period in second between 2 join/prune mes-
             sages.  _C_o_e_f is the coefficient to determine the join/prune hold-
             time; the holdtime will be _p_e_r_i_o_d * _c_o_e_f.  The default values of
             the period and the coefficient are 60 and 3.5, respectively. Con-
             sequently, the default holdtime is 210 seconds.
     ddaattaa__ttiimmeeoouutt _t_i_m_e_r_;
             Specifies the time after which (S,G) state for a silent source
             will be deleted.  The default value is 210.
     rreeggiisstteerr__ssuupppprreessssiioonn__ttiimmeeoouutt _i_n_t_e_r_v_a_l_;
             _I_n_t_e_r_v_a_l specifies the interval between receiving a Register-Stop
             and allowing PIM Register to be send again.  The default value is
             60.
     pprroobbee__ttiimmee _t_i_m_e_r_;
             _T_i_m_e_r specifies the time between sending a null Register and the
             Register-Suppression-Timer expiring unless it is restarted by re-
             ceiving a Register-Stop.  The default value is 5.
     aasssseerrtt__ttiimmeeoouutt _i_n_t_e_r_v_a_l_;
             _I_n_t_e_r_v_a_l specifies the interval between the last time an Assert
             is received and the time at which the assert is timeout.  The de-
             fault value is 180.
     ccaanndd__rrpp [_i_n_t_e_r_f_a_c_e] [ttiimmee _t_i_m_e] [pprriioorriittyy _p_r_i_o_r_i_t_y] ;
             Specifies to act as a Candidate Rendezvous Point(RP).  It is rec-
             ommended to specify ccaanndd__rrpp only in typical usage.  All other pa-
             rameters are optional and will be set automatically.  If an
             _i_n_t_e_r_f_a_c_e is specified, pim6sd(8) will search for a global ad-
             dress on the specified interface and set the address in Candidate
             RP Advertisements.  An optional parameter ttiimmee specifies the in-
             terval of two succeeding advertisements in seconds.  Its default
             value is 60.  2.5 * _t_i_m_e will be set to Candidate-RP-Advertise-
             ment messages.  Another optional parameter pprriioorriittyy specifies the
             priority of the RP.  The default value is 0, which means the
             highest priority.
     ssttaattiicc__rrpp _p_r_e_f_i_x _a_d_d_r_e_s_s [pprriioorriittyy _p_r_i_o_r_i_t_y] ;
             Specifies a static group-to-RP mapping.  Necessary when there is
             a IPv6 multicast router not understanding BSR message.  It cannot
             be specified with ccaanndd__rrpp or ccaanndd__bbssrr configuration.

             BSR function remains working independly of this option, so you
             can specify static group-to-RP mappings by this option while
             flodding BSR messages from upstream to downstreams, but cannot
             redistribute this static mapping by BSR messages.

             If this option and BSR message provides a different RP for the
             same group, the one with higher priority (i.e. smaller priority
             value) is chosen.  If their priority is same, static one wins.

             An optional parameter pprriioorriittyy specifies the priority of this
             static group-to-RP mapping.  Its default value is 0 (highest).
     ggrroouupp__pprreeffiixx _p_r_e_f_i_x_;
             When acting as a Rendezvous Point(RP), _p_r_e_f_i_x specifies a group
             prefix that the RP will handle.
     ccaanndd__bboooottssttrraapp__rroouutteerr [_i_n_t_e_r_f_a_c_e] [ttiimmee _t_i_m_e] [pprriioorriittyy _p_r_i_o_r_i_t_y]
             [mmaasskklleenn _m_a_s_k_l_e_n] ;
             Specifies to act as a Candidate Bootstrap Router(BSR).  It is
             recommended to specify ccaanndd__bboooottssttrraapp__rroouutteerr only in typical us-
             age.  All other parameters are optional and will be set automati-
             cally.  If an _i_n_t_e_r_f_a_c_e is specified, pim6sd(8) will search for a
             global address on the specified interface and set the address in
             Bootstrap messages.  An optional parameter ttiimmee specifies the in-
             terval of two succeeding bootstraps in seconds.  Its default val-
             ue is 60.  Another optional parameter pprriioorriittyy specifies the pri-
             ority of the BSR.  The default value is 0, which means the lowest
             priority.  Hash mask length can also be specified by the mmaasskklleenn
             parameter. Its value, _m_a_s_k_l_e_n, must be no less than 0 and no
             greater than 128.
     sswwiittcchh__rreeggiisstteerr__tthhrreesshhoolldd rraattee _r_a_t_e iinntteerrvvaall _i_n_t_e_r_v_a_l_;
             Specifies the threshold that a Rendezvous Point(RP) switches to a
             shortest path tree, which is valid only when acting as an RP.
             rraattee specifies the threshold in bits per second, and iinntteerrvvaall
             specifies the interval of checking the rate in seconds.  The de-
             fault values are 50000 and 20, respectively.
     sswwiittcchh__ddaattaa__tthhrreesshhoolldd rraattee _r_a_t_e iinntteerrvvaall _i_n_t_e_r_v_a_l_;
             Specifies the threshold that a last hop router switches to a
             shortest path tree.  rraattee specifies the threshold in bits per
             second, and iinntteerrvvaall specifies the interval of checking the rate
             in seconds.  The default values are 50000 and 20, respectively.

EEXXAAMMPPLLEE
     # phyint gif0 disable;
     # phyint ep0 preference 101;
     phyint de0 disable;
     #
     # followings are for a candidate Rendezvous Point, which should usually
     # be disabled.
     cand_bootstrap_router;
     cand_rp;

SSEEEE AALLSSOO
     pim6sd(8)

HHIISSTTOORRYY
     The pim6sd(8) command is developed by Mickael Hoerdt at LSIIT Laboratory.
     It is based on IPv4 PIM sparse-mode ppiimmdd developed at University of
     Southern California, which has also been derived from mmrroouutteedd.  mmrroouutteedd
     is COPYRIGHT 1989 by The Board of Trustees of Leland Stanford Junior Uni-
     versity.

 KAME                             Oct 6, 1999                                3
