
"make image" needs root privilege

(cd obj.i386.standard; su - root -c "cd `pwd`; bmake MODEL=standard  KERNEL_CONF=FDGW  BIOSBOOT=bootxx_ffsv1  OPSYS=NetBSD  SH=/bin/sh	 GNU_DIR=gnu  PDS_DIR=pds  PKG_DIR=pkg  STATUS_DIR=pkg  UTILS_DIR=utils  TOOL_DIR=/usr/tools image" )
tset: standard error: Inappropriate ioctl for device


image 1. make ramdisk-small.fs for standard model

/usr/tools/bin/nbmake -f Makefile.ramdisk MOUNT_POINT=/home/yuuki/fdgw2/obj.i386.standard/mnt  TOP=`pwd`/NetBSD/distrib/i386/liveimage  _SYS_DIR=/usr/src/sys  _CONF_DIR=conf/  BSDSRCDIR=`pwd`/NetBSD  CURDIR=/home/yuuki/fdgw2/obj.i386.standard _ETC_DIR=conf/etc  MODEL=standard ARCH=i386  INO_BYTES=40960  RAMDISK_S=ramdisk-small.fs  BIOSBOOT=bootxx_ffsv1  TOOL_DIR=/usr/tools  OBJ_DIR=/usr/obj image
rm -f ramdisk-small.fs.tmp
test -d /home/yuuki/fdgw2/obj.i386.standard/work_ramdisk || mkdir -p /home/yuuki/fdgw2/obj.i386.standard/work_ramdisk
/usr/tools/bin/nbmtree -def /home/yuuki/fdgw2/obj.i386.standard/mtree.conf -p /home/yuuki/fdgw2/obj.i386.standard/work_ramdisk/ -U
TOPDIR=/home/yuuki/fdgw2/obj.i386.standard/NetBSD/distrib/i386/liveimage CURDIR=/home/yuuki/fdgw2/obj.i386.standard OBJDIR=/home/yuuki/fdgw2/obj.i386.standard WORK_RAM=/home/yuuki/fdgw2/obj.i386.standard/work_ramdisk  BSDSRCDIR=/home/yuuki/fdgw2/obj.i386.standard/NetBSD TARGDIR=/home/yuuki/fdgw2/obj.i386.standard/work_ramdisk sh /home/yuuki/fdgw2/obj.i386.standard/runlist.sh /home/yuuki/fdgw2/obj.i386.standard/list
COPY	${OBJDIR}/ramdiskbin		ramdiskbin
LINK	ramdiskbin			bin/cat
LINK	ramdiskbin			bin/cp
LINK	ramdiskbin			bin/ln
LINK	ramdiskbin			bin/mv
LINK	ramdiskbin			bin/sh
LINK	ramdiskbin			bin/stty
LINK	ramdiskbin			bin/mkdir
LINK	ramdiskbin			bin/rm
LINK    ramdiskbin                      bin/test
LINK    ramdiskbin                      bin/[
LINK    ramdiskbin                      bin/hostname
LINK    ramdiskbin                      bin/echo
LINK    ramdiskbin                      bin/date
LINK	ramdiskbin			sbin/halt
LINK	ramdiskbin			sbin/ifconfig
LINK	ramdiskbin			sbin/init
LINK	ramdiskbin			sbin/kernfs
LINK	ramdiskbin			sbin/mount
LINK	ramdiskbin			sbin/mount_ffs
LINK	ramdiskbin			sbin/mount_kernfs
LINK	ramdiskbin			sbin/ping
LINK	ramdiskbin			sbin/reboot
LINK	ramdiskbin			sbin/route
LINK	ramdiskbin			sbin/routed
LINK	ramdiskbin			sbin/umount
LINK	ramdiskbin			sbin/sysctl
LINK	ramdiskbin			sbin/pfctl
LINK	ramdiskbin			sbin/shutdown
SYMLINK	/bin/cat			usr/bin/more
SYMLINK	/bin/cat			usr/bin/sed
SYMLINK /bin/cat			usr/bin/touch
SPECIAL	/bin/rm ramdiskbin
COPY	${CURDIR}/utils/x_grep/grep.sh	usr/bin/grep
COPY	${TOP}/../../../etc/group			etc/group
COPY	${TOP}/../../../etc/master.passwd	etc/master.passwd
COPY	${TOP}/../../../etc/protocols	etc/protocols
COPY	${TOP}/../../../etc/netconfig	etc/netconfig
COPY	${TOP}/../../../etc/services	etc/services
SPECIAL cat etc/services | grep -E ^# -v | grep [ -v > etc/services.tmp
SPECIAL rm etc/services
SPECIAL mv etc/services.tmp etc/services
SPECIAL	pwd_mkdb -p -d ./ etc/master.passwd
SPECIAL /bin/rm etc/spwd.db
COPY	${TOP}/../../../etc/MAKEDEV.awk 				dev/MAKEDEV.awk
COPY	${TOP}/../../../etc/MAKEDEV.tmpl				dev/MAKEDEV.tmpl
SPECIAL cd dev; NETBSDSRCDIR=/usr/src MACHINE=i386 MACHINE_ARCH=i386 awk -f MAKEDEV.awk MAKEDEV.tmpl > MAKEDEV
SPECIAL	cd dev; sh MAKEDEV ramdisk
SPECIAL	cd dev; sh MAKEDEV pf
SPECIAL	cd dev; sh MAKEDEV npf
SPECIAL cd dev; sh MAKEDEV bpf
SPECIAL	/bin/rm dev/MAKEDEV
SPECIAL /bin/rm dev/MAKEDEV.awk
SPECIAL /bin/rm dev/MAKEDEV.tmpl
COPY	${CURDIR}/dot.profile		.profile
SPECIAL mkdir -p ${WORK_RAM}/etc/rc.d
SPECIAL mkdir -p ${WORK_RAM}/usr
SPECIAL cp       ${BSDSRCDIR}/etc/rc.d/pf ${WORK_RAM}/etc/rc.d
SPECIAL cp       ${BSDSRCDIR}/etc/rc.d/routed ${WORK_RAM}/etc/rc.d
SPECIAL cp -pr   ${WORK_RAM}/etc ${CURDIR}/work
/usr/tools/bin/nbmakefs -M 4194304 -m 4194304  -B 1234 -t ffs -N /home/yuuki/fdgw2/obj.i386.standard/work_ramdisk/etc ramdisk-small.fs.tmp /home/yuuki/fdgw2/obj.i386.standard/work_ramdisk
Calculated size of `ramdisk-small.fs.tmp': 4194304 bytes, 681 inodes
Extent size set to 8192
ramdisk-small.fs.tmp: 4.0MB (8192 sectors) block size 8192, fragment size 1024
	using 1 cylinder groups of 4.00MB, 512 blks, 704 inodes.
super-block backups (for fsck -b #) at:
 32,
Populating `ramdisk-small.fs.tmp'
Image `ramdisk-small.fs.tmp' complete
/usr/tools/bin/nbsed  -e "s/@@SECTORS@@/32/"  -e "s/@@HEADS@@/64/"  -e "s/@@SECPERCYLINDERS@@/2048/"  -e "s/@@CYLINDERS@@/4/"  -e "s/@@IMAGESECTORS@@/8192/"  -e "s/@@FSSECTORS@@/8192/"  -e "s/@@FSOFFSET@@/0/"  -e "s/@@SWAPSECTORS@@/0/"  -e "s/@@SWAPOFFSET@@/8192/"  -e "s/@@BSDPARTSECTORS@@/8192/"  < /usr/src/distrib/common/bootimage/diskproto.mbr.in > work.ramdiskproto
/usr/tools/bin/nbdisklabel -R -F -M i386 -B le ramdisk-small.fs.tmp work.ramdiskproto
nbdisklabel: warning, partition b: size 0, but offset 8192
mv -f ramdisk-small.fs.tmp ramdisk-small.fs
ls /home/yuuki/fdgw2/obj.i386.standard/work/etc
group
master.passwd
netconfig
passwd
protocols
pwd.db
rc.d
services

image 2. inject mdsetimage into NetBSD Kernel for standard model

/usr/tools/bin/nbmake -f Makefile.kernel MOUNT_POINT=/home/yuuki/fdgw2/obj.i386.standard/mnt  TOP=`pwd`/NetBSD/distrib/i386/liveimage  _SYS_DIR=/usr/src/sys  _CONF_DIR=conf/  BSDSRCDIR=`pwd`/NetBSD  CURDIR=/home/yuuki/fdgw2/obj.i386.standard _ETC_DIR=conf/etc  MODEL=standard ARCH=i386  INO_BYTES=40960  RAMDISK_S=ramdisk-small.fs  BIOSBOOT=bootxx_ffsv1  TOOL_DIR=/usr/tools  OBJ_DIR=/usr/obj image
cp /home/yuuki/fdgw2/obj.i386.standard/compile/FDGW/netbsd netbsd.tmp
/usr/tools/bin/i486--netbsdelf-mdsetimage -v netbsd.tmp ramdisk-small.fs
got symbols from netbsd.tmp
mapped netbsd.tmp
copying image ramdisk-small.fs into netbsd.tmp
done copying image
exiting
nm netbsd.tmp > netbsd.symbols
strip netbsd.tmp
gzip -9 netbsd.tmp
mv netbsd.tmp.gz netbsd.gz
rm -f netbsd
ln netbsd.gz netbsd
ls /home/yuuki/fdgw2/obj.i386.standard/work/etc
group
master.passwd
netconfig
passwd
protocols
pwd.db
rc.d
services

image 3. make a bootable floppy and inject netbsd into it for standard model

/usr/tools/bin/nbmake -f Makefile.bootfloppy MOUNT_POINT=/home/yuuki/fdgw2/obj.i386.standard/mnt  TOP=`pwd`/NetBSD/distrib/i386/liveimage  _SYS_DIR=/usr/src/sys  _CONF_DIR=conf/  BSDSRCDIR=`pwd`/NetBSD  CURDIR=/home/yuuki/fdgw2/obj.i386.standard _ETC_DIR=conf/etc  MODEL=standard ARCH=i386  INO_BYTES=40960  RAMDISK_S=ramdisk-small.fs  BIOSBOOT=bootxx_ffsv1  TOOL_DIR=/usr/tools  OBJ_DIR=/usr/obj image || exit 1
cp -f /usr/obj/destdir.i386/usr/mdec/boot /home/yuuki/fdgw2/obj.i386.standard/work
cp -f netbsd.gz /home/yuuki/fdgw2/obj.i386.standard/work
cp -pr conf/etc/[a-z]* /home/yuuki/fdgw2/obj.i386.standard/work/etc
cp -pr conf/etc/defaults/rc.conf /home/yuuki/fdgw2/obj.i386.standard/work/etc
merge up rc.conf
merging cocnfig(s) from /home/yuuki/fdgw2/obj.i386.standard/work/etc
/usr/tools/bin/nbsed "s/@@BOOTDISK@@/sd0/" < /usr/src/distrib/common/bootimage/fstab.in > work.fstab
cp work.fstab /home/yuuki/fdgw2/obj.i386.standard/work/etc/fstab
/usr/tools/bin/nbmakefs -M 3145728 -m 3145728 -B 1234 -t ffs -N work/etc  -o bsize=16384,fsize=2048,density=8192 boot.fs work
Calculated size of `boot.fs': 3145728 bytes, 32 inodes
Extent size set to 16384
boot.fs: 3.0MB (6144 sectors) block size 16384, fragment size 2048
	using 1 cylinder groups of 3.00MB, 192 blks, 384 inodes.
super-block backups (for fsck -b #) at:
 32,
Populating `boot.fs'
Image `boot.fs' complete
/usr/tools/bin/nbinstallboot -v -m i386 boot.fs /usr/obj/destdir.i386/usr/mdec/bootxx_ffsv1
File system:         boot.fs
Primary bootstrap:   /usr/obj/destdir.i386/usr/mdec/bootxx_ffsv1
Ignoring PBR with invalid magic in sector 0 of `boot.fs'
Boot options:        timeout 5, flags 0, speed 9600, ioaddr 0, console pc
/usr/tools/bin/nbsed  -e "s/@@SECTORS@@/32/"  -e "s/@@HEADS@@/64/"  -e "s/@@SECPERCYLINDERS@@/2048/"  -e "s/@@CYLINDERS@@/3/"  -e "s/@@IMAGESECTORS@@/6144/"  -e "s/@@FSSECTORS@@/6144/"  -e "s/@@FSOFFSET@@/0/"  -e "s/@@SWAPSECTORS@@/0/"  -e "s/@@SWAPOFFSET@@/6144/"  -e "s/@@BSDPARTSECTORS@@/6144/"  < /usr/src/distrib/common/bootimage/diskproto.mbr.in > work.diskproto
/usr/tools/bin/nbdisklabel -R -F -M i386 -B le boot.fs work.diskproto
nbdisklabel: warning, partition b: size 0, but offset 6144
rm -f boot.fs.[0-9]* standard.img
test -d ../image.i386 || mkdir -p ../image.i386
cp -p boot.fs ../image.i386/standard.img

building image for standard model stage done.

